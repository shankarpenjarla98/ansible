- name: Install Shipping Component
  hosts: shipping
  become: yes
  tasks:
  - name: Install Maven
    ansible.builtin.yum:
      name: maven
      state: installed
  - name: checking if user roboshop exits or not
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: true
  - name: printing the exiting status
    ansible.builtin.debug:
      msg: "{{output.rc}}"
  - name: creating the user
    ansible.builtin.user:
      name: roboshop
    when: output.rc != 0
  - name: check app directory exits or not
    ansible.builtin.stat:
      path: /app
    register: directory
  - name: printing the directory state
    ansible.builtin.debug:
      msg: "output:{{directory}}"
  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory
    when: directory.stat.exists == False
  - name: downloading shipping 
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app
      remote_src: yes
  - name: maven package
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app
  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service
  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true
  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true
  - name: install mysql client
    ansible.builtin.yum:
      name: mysql
      state: installed
  - name: load schema setup
    ansible.builtin.command: mysql -h mysql.learndevops.uno -uroot -pRoboShop@1 < /app/schema/shipping.sql 
  - name: restart shipping 
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true